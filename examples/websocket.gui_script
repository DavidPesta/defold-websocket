local websocket_async = require "websocket.client_async"

local function log(...)
	local text = ""
	local len = select("#", ...)
	for i=1,len  do
		text = text .. tostring(select(i, ...)) .. (i == len and "" or ", ")
	end
	
	print(text)
	local node = gui.get_node("log")
	gui.set_text(node, gui.get_text(node) .. "\n" .. text)
end

function init(self)
	msg.post(".", "acquire_input_focus")
	msg.post("@render:", "clear_color", { color = vmath.vector4(0.2, 0.4, 0.8, 1.0) })
end

function final(self)
	msg.post(".", "release_input_focus")
end

function update(self, dt)
	if self.ws then
		self.ws.step()
	end
end

function on_input(self, action_id, action)
	if action.released and gui.pick_node(gui.get_node("send/button"), action.x, action.y) then
		if not self.ws then
			log("creating async")
			self.ws = websocket_async()
			self.ws:on_message(function(message)
				log("on_message", message)
			end)
			self.ws:on_connected(function(ok, err)
				log("on_connected", ok, err, type(err))
				if err then
					log("on_connected error", err)
					self.ws:close()
					self.ws = nil
					gui.set_text(gui.get_node("send/label"), "CONNECT")
				else
					gui.set_text(gui.get_node("send/label"), "SEND")
				end
			end)
			self.ws:on_disconnected(function()
				log("on_disconnected")
				self.ws = nil
				gui.set_text(gui.get_node("send/label"), "CONNECT")
			end)
			--self.ws:connect("ws://echo.websocket.org")
			self.ws:connect("ws://localhost:9999")
		else
			local message_to_send = 'sending to server'
			local ok, was_clean, code, reason = self.ws:send(message_to_send)
			log("Sending '" .. message_to_send .. "'", ok, was_clean, code, reason)
		end
	end
end
